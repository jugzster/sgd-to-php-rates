from datetime import datetime

from facebook_scraper import get_posts
from exceptions import FacebookPostNotFoundError
from exchange_rate import ExchangeRate

SOURCE = "IRemit Walk-in"
FEE = 4


def get_rate():
    """
    Scrape from Facebook. Get rate from image's description.
    Image description could be auto-generated by Facebook.
    """
    for post in get_posts("iremitsg", pages=20):
        # Sample: May be an image of text that says 'BEST RATES! Google Play SEND MONEY ONLINE TO THEPHILIPPINES
        # Use IREMITX 24/7 DOWNLOAD NOW! Pownbadenthe App Store or REMIT Cash using an DBS POSB ATM EXCHANGE RATE FOR TODAY Dec. 5, 2022
        # IREMITX 41.16 WALK-IN 41.10 DISCLAIMER...
        images_description = post["images_description"]
        timestamp: datetime = post["time"]

        if not images_description:
            continue

        description: str = images_description[0].upper()

        if "EXCHANGE RATE FOR TODAY" in description:
            text_to_parse = description.split("EXCHANGE RATE FOR TODAY", 1)[1]

            split = text_to_parse.split()
            i = 0
            length = len(split)
            while i < length:
                curr = split[i]

                # If no "WALK-IN" e.g. "IREMITX 41.10 41.25", get 2nd rate
                if (
                    curr == "IREMITX"
                    and "WALK-IN" not in text_to_parse
                    and "WALKIN" not in text_to_parse
                    and i + 2 < length
                ):
                    next_token = split[i + 2]
                    if is_decimal(next_token):
                        return to_exchange_rate(next_token, timestamp)

                if is_walkin(curr) and i + 1 < length:
                    next_token = split[i + 1]
                    if is_decimal(next_token):
                        return to_exchange_rate(next_token, timestamp)
                    break

                i += 1
    raise FacebookPostNotFoundError("IRemit Walk-in rate from Facebook not found")


def is_decimal(string: str) -> bool:
    return string.replace(".", "", 1).isdigit()


def is_walkin(string: str) -> bool:
    return string.replace("-", "").upper() == "WALKIN"


def to_exchange_rate(string: str, timestamp: datetime) -> ExchangeRate:
    return ExchangeRate(
        effective_on=timestamp,
        source=SOURCE,
        rate=string,
        fee=FEE,
        updated_on=datetime.now(),
    )


def main():
    rate = get_rate()
    print(rate)


if __name__ == "__main__":
    main()
